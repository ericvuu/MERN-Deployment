{"version":3,"sources":["views/Dashboard.js","components/PetForm.js","views/NewPet.js","components/DeleteButton.js","views/ViewPet.js","views/UpdatePet.js","App.js","reportWebVitals.js","index.js"],"names":["Dashboard","useState","pets","setPets","useEffect","axios","get","then","res","data","className","to","scope","sort","a","b","type","map","pet","idx","name","_id","PetForm","props","initialName","initialType","initialDescription","initialSkill_1","initialSkill_2","initialSkill_3","onSubmitProp","actionType","setName","setType","description","setDescription","skill_1","setSkill_1","skill_2","setSkill_2","skill_3","setSkill_3","onSubmit","e","preventDefault","onChange","target","value","NewPet","errors","setErrors","error","index","post","console","log","navigate","catch","errorResponse","response","errorArr","Object","keys","key","push","message","DeleteButton","petId","petName","successCallback","onClick","delete","ViewPet","setPet","id","UpdatePet","loaded","setLoaded","put","App","path","from","noThrow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MA0DeA,EAtDG,WAAO,IAAD,EAEEC,mBAAS,IAFX,mBAEfC,EAFe,KAETC,EAFS,KAUtB,OANAC,qBAAU,WAERC,IAAMC,IAAI,8BAA8BC,MAAK,SAACC,GAAD,OAASL,EAAQK,EAAIC,WAEjE,IAGD,sBAAKC,UAAU,YAAf,UACE,6CACA,cAAC,IAAD,CAAMC,GAAG,aAAT,sCACA,yEAEA,wBAAOD,UAAU,wBAAjB,UACE,gCACE,+BACE,oBAAIE,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,0BAGJ,gCACGV,EAAKW,MAAK,SAACC,EAAEC,GACR,OAAGD,EAAEE,KAAOD,EAAEC,MAAgB,EAC3BF,EAAEE,KAAOD,EAAEC,KAAe,EACtB,KACVC,KAAI,SAACC,EAAKC,GACT,OACE,+BACE,6BAAKD,EAAIE,OACT,6BAAKF,EAAIF,OACT,+BACA,qBAAKN,UAAU,iBAAf,SACE,cAAC,IAAD,CAAMC,GAAE,gBAAWO,EAAIG,KAAvB,qBAAmCF,KAErC,sBAAMT,UAAU,OAAhB,eACA,qBAAKA,UAAU,iBAAf,SACE,cAAC,IAAD,CAAMC,GAAE,gBAAWO,EAAIG,IAAf,SAAR,iBAAwCF,UATnCA,eC8DVG,EA9FC,SAACC,GAAW,IAClBC,EAA2HD,EAA3HC,YAAaC,EAA8GF,EAA9GE,YAAaC,EAAiGH,EAAjGG,mBAAoBC,EAA6EJ,EAA7EI,eAAgBC,EAA6DL,EAA7DK,eAAgBC,EAA6CN,EAA7CM,eAAgBC,EAA6BP,EAA7BO,aAAcC,EAAeR,EAAfQ,WAD3F,EAGD9B,mBAASuB,GAHR,mBAGlBJ,EAHkB,KAGZY,EAHY,OAID/B,mBAASwB,GAJR,mBAIlBT,EAJkB,KAIZiB,EAJY,OAKahC,mBAASyB,GALtB,mBAKlBQ,EALkB,KAKLC,EALK,OAMKlC,mBAAS0B,GANd,mBAMlBS,EANkB,KAMTC,EANS,OAOKpC,mBAAS2B,GAPd,mBAOlBU,EAPkB,KAOTC,EAPS,OAQKtC,mBAAS4B,GARd,mBAQlBW,EARkB,KAQTC,EARS,KAsBzB,OACE,qBAAK/B,UAAU,qBAAf,SACE,uBAAMA,UAAU,OAAOgC,SAdH,SAACC,GACvBA,EAAEC,iBACFd,EAAa,CACXV,OACAJ,OACAkB,cACAE,UACAE,UACAE,aAMA,UACE,sBAAK9B,UAAU,cAAf,UACE,sBAAKA,UAAU,QAAf,UACE,oBAAGA,UAAU,aAAb,UACE,+CACA,uBACEA,UAAU,eACVM,KAAK,OACL6B,SAAU,SAACF,GAAD,OAAOX,EAAQW,EAAEG,OAAOC,QAClCA,MAAO3B,OAGX,oBAAGV,UAAU,aAAb,UACE,+CACA,uBACEA,UAAU,eACVM,KAAK,OACL6B,SAAU,SAACF,GAAD,OAAOV,EAAQU,EAAEG,OAAOC,QAClCA,MAAO/B,OAGX,oBAAGN,UAAU,aAAb,UACE,sDACA,uBACEA,UAAU,eACVM,KAAK,OACL6B,SAAU,SAACF,GAAD,OAAOR,EAAeQ,EAAEG,OAAOC,QACzCA,MAAOb,UAIb,sBAAKxB,UAAU,QAAf,UACE,qDACA,oBAAGA,UAAU,aAAb,UACE,8CACA,uBACEA,UAAU,eACVM,KAAK,OACL6B,SAAU,SAACF,GAAD,OAAON,EAAWM,EAAEG,OAAOC,QACrCA,MAAOX,OAGX,oBAAG1B,UAAU,aAAb,UACE,8CACA,uBACEA,UAAU,eACVM,KAAK,OACL6B,SAAU,SAACF,GAAD,OAAOJ,EAAWI,EAAEG,OAAOC,QACrCA,MAAOT,OAGX,oBAAG5B,UAAU,aAAb,UACE,8CACA,uBACEA,UAAU,eACVM,KAAK,OACL6B,SAAU,SAACF,GAAD,OAAOF,EAAWE,EAAEG,OAAOC,QACrCA,MAAOP,aAKf,qBAAK9B,UAAU,cAAf,SACE,yBAAQA,UAAU,uBAAlB,UAA0CqB,EAA1C,kBCrCKiB,EAhDA,WAAO,IAAD,EACS/C,mBAAS,IADlB,mBACZgD,EADY,KACJC,EADI,OAEEjD,mBAAS,OAAvB8B,EAFY,oBAsBnB,OACE,sBAAKrB,UAAU,wBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,cAAC,IAAD,CAAMC,GAAG,QAAT,4BAEF,6CACA,4DACCsC,EAAOhC,KAAI,SAACkC,EAAOC,GAAR,OACV,mBAAG1C,UAAU,cAAb,SACGyC,GAD6BC,MAIlC,cAAC,EAAD,CACEtB,aA/BY,SAACZ,GACjBb,IACGgD,KAAK,6BAA8BnC,GACnCX,MAAK,SAACC,GACL8C,QAAQC,IAAI/C,GACZgD,YAAS,YAEVC,OAAM,SAACN,GAGN,IAFA,IAAMO,EAAgBP,EAAMQ,SAASlD,KAAKwC,OACpCW,EAAW,GACjB,MAAkBC,OAAOC,KAAKJ,GAA9B,eAA8C,CAAzC,IAAMK,EAAG,KAEZH,EAASI,KAAKN,EAAcK,GAAKE,SAEnCf,EAAUU,OAkBVpC,YAAY,GACZC,YAAY,GACZC,mBAAmB,GACnBC,eAAe,GACfC,eAAe,GACfC,eAAe,GACfE,WAAYA,QC1BLmC,EAlBM,SAAC3C,GAAW,IACvB4C,EAAoC5C,EAApC4C,MAAOC,EAA6B7C,EAA7B6C,QAASC,EAAoB9C,EAApB8C,gBAQxB,OACE,8BACE,mCACE,yBAAQC,QATI,SAAC3B,GACjBtC,IAAMkE,OAAN,qCAA2CJ,EAA3C,MAAqD5D,MAAK,SAACC,GACzD6D,QAO8B3D,UAAU,sBAAtC,oBAAoE0D,EAApE,aCsCOI,EAhDC,SAACjD,GAAW,IAAD,EACHtB,mBAAS,IADN,mBAClBiB,EADkB,KACbuD,EADa,KAUzB,OAPArE,qBAAU,WACRC,IACGC,IAAI,8BAAgCiB,EAAMmD,IAC1CnE,MAAK,SAACC,GAAD,OAASiE,EAAOjE,EAAIC,WAE3B,CAACc,EAAMmD,KAGR,sBAAKhE,UAAU,iBAAf,UACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,QAAf,UACE,oBAAIA,UAAU,YAAd,yBACA,iDAAoBQ,EAAIE,WAE1B,sBAAKV,UAAU,QAAf,UACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,CAAMC,GAAG,QAAT,4BAEF,qBAAKD,UAAU,OAAf,SACE,cAAC,EAAD,CACEyD,MAAOjD,EAAIG,IACX+C,QAASlD,EAAIE,KACbiD,gBAAiB,kBAAMb,YAAS,oBAKxC,sBAAK9C,UAAU,OAAf,UACE,2CAAcQ,EAAIF,QAClB,8CAAiBE,EAAIgB,eACrB,sBAAKxB,UAAU,SAAf,UACE,yCACA,qBAAKA,UAAU,OAAf,SACE,qBAAIA,UAAU,gBAAd,UACE,6BAAKQ,EAAIkB,UACT,6BAAKlB,EAAIoB,UACT,6BAAKpB,EAAIsB,yBCuBRmC,EA9DG,SAACpD,GAAW,IACpBmD,EAAOnD,EAAPmD,GADmB,EAECzE,mBAAS,IAFV,mBAEpBgD,EAFoB,KAEZC,EAFY,OAGCjD,oBAAS,GAHV,mBAGpB2E,EAHoB,KAGZC,EAHY,OAIL5E,mBAAS,IAJJ,mBAIpBiB,EAJoB,KAIfuD,EAJe,OAKNxE,mBAAS,QAAvB8B,EALoB,oBAO3B3B,qBAAU,WACRC,IACGC,IADH,qCACqCoE,IAClCnE,MAAK,SAACC,GACLiE,EAAOjE,EAAIC,MACXoE,GAAU,QAEb,CAACH,IAoBJ,OACE,sBAAKhE,UAAU,wBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,cAAC,IAAD,CAAMC,GAAG,QAAT,4BAEF,6CACA,4DACCsC,EAAOhC,KAAI,SAACkC,EAAOC,GAAR,OACV,mBAAG1C,UAAU,cAAb,SACGyC,GAD6BC,MAIjCwB,GACC,cAAC,EAAD,CACE9C,aAhCU,SAACZ,GACjBb,IACGyE,IADH,qCACqCJ,GAAMxD,GACxCX,MAAK,SAACC,GACLgD,YAAS,YAEVC,OAAM,SAACN,GAIN,IAHA,IAAMO,EAAgBP,EAAMQ,SAASlD,KAAKwC,OAEpCW,EAAW,GACjB,MAAkBC,OAAOC,KAAKJ,GAA9B,eAA8C,CAAzC,IAAMK,EAAG,KAEZH,EAASI,KAAKN,EAAcK,GAAKE,SAEnCf,EAAUU,OAmBRpC,YAAaN,EAAIE,KACjBK,YAAaP,EAAIF,KACjBU,mBAAoBR,EAAIgB,YACxBP,eAAgBT,EAAIkB,QACpBR,eAAgBV,EAAIoB,QACpBT,eAAgBX,EAAIsB,QACpBT,WAAYA,QCxCPgD,MAdf,WACE,OACE,qBAAKrE,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAWsE,KAAK,UAChB,cAAC,EAAD,CAAQA,KAAK,cACb,cAAC,EAAD,CAASA,KAAK,cACd,cAAC,EAAD,CAAWA,KAAK,mBAChB,cAAC,IAAD,CAAUC,KAAK,IAAItE,GAAG,QAAQuE,QAAQ,eCF/BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9E,MAAK,YAAkD,IAA/C+E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a6538daf.chunk.js","sourcesContent":["import React, {useState , useEffect} from 'react'\nimport axios from \"axios\";\nimport { Link } from \"@reach/router\";\n\nconst Dashboard = () => {\n\n  const [pets, setPets] = useState([])\n\n  useEffect(() => {\n\n    axios.get(\"http://localhost:8000/pets\").then((res) => setPets(res.data))\n\n  }, [])\n\n  return (\n    <div className=\"container\">\n      <h1>Pet Shelter</h1>\n      <Link to=\"/pets/new/\">add a pet to the shelter</Link>\n      <p>These pets are looking for a good home: </p>\n\n      <table className=\"table table-dark mt-3\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Type</th>\n            <th scope=\"col\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {pets.sort((a,b) => {\n                if(a.type < b.type) { return -1; }\n                if(a.type > b.type) { return 1; }\n                return 0;\n          }).map((pet, idx) => {\n              return (\n                <tr key={idx}>\n                  <td>{pet.name}</td>\n                  <td>{pet.type}</td>\n                  <td>\n                  <div className=\"d-inline-block\">\n                    <Link to={`/pets/${pet._id}`} key={idx}> details</Link>\n                  </div>\n                  <span className=\"px-2\">|</span>\n                  <div className=\"d-inline-block\">\n                    <Link to={`/pets/${pet._id}/edit`} key={idx}>\n                      edit\n                    </Link>\n                    </div>\n                  </td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Dashboard\n","import React, { useState } from \"react\";\nimport { Link } from \"@reach/router\";\n\nconst PetForm = (props) => {\n  const { initialName, initialType, initialDescription, initialSkill_1, initialSkill_2, initialSkill_3, onSubmitProp, actionType } = props;\n\n  const [name, setName] = useState(initialName);\n  const [type, setType] = useState(initialType);\n  const [description, setDescription] = useState(initialDescription);\n  const [skill_1, setSkill_1] = useState(initialSkill_1);\n  const [skill_2, setSkill_2] = useState(initialSkill_2);\n  const [skill_3, setSkill_3] = useState(initialSkill_3);\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    onSubmitProp({\n      name,\n      type,\n      description,\n      skill_1,\n      skill_2,\n      skill_3,\n    });\n  };\n\n  return (\n    <div className=\"col-5 mx-auto mt-5\">\n      <form className=\"mt-3\" onSubmit={onSubmitHandler}>\n        <div className=\"d-flex mt-5\">\n          <div className=\"col-6\">\n            <p className=\"form-group\">\n              <label>Pet Name: </label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                onChange={(e) => setName(e.target.value)}\n                value={name}\n              />\n            </p>\n            <p className=\"form-group\">\n              <label>Pet Type: </label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                onChange={(e) => setType(e.target.value)}\n                value={type}\n              />\n            </p>\n            <p className=\"form-group\">\n              <label>Pet Description: </label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                onChange={(e) => setDescription(e.target.value)}\n                value={description}\n              />\n            </p>\n          </div>\n          <div className=\"col-6\">\n            <h5>Skills (optional): </h5>\n            <p className=\"form-group\">\n              <label>Skill 1: </label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                onChange={(e) => setSkill_1(e.target.value)}\n                value={skill_1}\n              />\n            </p>\n            <p className=\"form-group\">\n              <label>Skill 2: </label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                onChange={(e) => setSkill_2(e.target.value)}\n                value={skill_2}\n              />\n            </p>\n            <p className=\"form-group\">\n              <label>Skill 3: </label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                onChange={(e) => setSkill_3(e.target.value)}\n                value={skill_3}\n              />\n            </p>\n          </div>\n        </div>\n        <div className=\"text-center\">\n          <button className=\"btn btn-primary ml-3\">{actionType} Pet</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PetForm;\n","import React, { useState } from \"react\";\nimport PetForm from \"../components/PetForm\";\nimport axios from \"axios\";\nimport { navigate, Link } from \"@reach/router\";\n\nconst NewPet = () => {\n  const [errors, setErrors] = useState([]);\n  const [actionType] = useState(\"Add\");\n\n  const createPet = (pet) => {\n    axios\n      .post(\"http://localhost:8000/pets\", pet)\n      .then((res) => {\n        console.log(res);\n        navigate(`/pets`);\n      })\n      .catch((error) => {\n        const errorResponse = error.response.data.errors;\n        const errorArr = [];\n        for (const key of Object.keys(errorResponse)) {\n          // Loop through all errors and get the messages\n          errorArr.push(errorResponse[key].message);\n        }\n        setErrors(errorArr);\n      });\n  };\n\n  return (\n    <div className=\"container text-center\">\n      <div className=\"container text-left\">\n        <Link to=\"/pets\">back to home</Link>\n      </div>\n      <h1>Pet Shelter</h1>\n      <h5>Know a pet needing a home?</h5>\n      {errors.map((error, index) => (\n        <p className=\"text-danger\" key={index}>\n          {error}\n        </p>\n      ))}\n      <PetForm\n        onSubmitProp={createPet}\n        initialName=\"\"\n        initialType=\"\"\n        initialDescription=\"\"\n        initialSkill_1=\"\"\n        initialSkill_2=\"\"\n        initialSkill_3=\"\"\n        actionType={actionType}\n      />\n    </div>\n  );\n};\n\nexport default NewPet;\n","import React from \"react\";\nimport axios from \"axios\";\n\nconst DeleteButton = (props) => {\n  const { petId, petName, successCallback } = props;\n\n  const deletePet = (e) => {\n    axios.delete(`http://localhost:8000/pets/${petId}/`).then((res) => {\n      successCallback();\n    });\n  };\n\n  return (\n    <div>\n      <>\n        <button onClick={deletePet} className=\"btn btn-danger ml-5\"> Adopt {petName}  </button>\n      </>\n    </div>\n  );\n};\n\nexport default DeleteButton;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link, navigate } from \"@reach/router\";\nimport DeleteButton from \"../components/DeleteButton\";\n\nconst ViewPet = (props) => {\n  const [pet, setPet] = useState({});\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8000/pets/\" + props.id)\n      .then((res) => setPet(res.data))\n      // .catch((err) => navigate(\"/error\"));\n  }, [props.id]);\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"row\">\n        <div className=\"col-6\">\n          <h3 className=\"display-5\">Pet Shelter</h3>\n          <h3>Details about: {pet.name}</h3>\n        </div>\n        <div className=\"col-6\">\n          <div className=\"mt-1 ml-5\">\n            <Link to=\"/pets\">back to home</Link>\n          </div>\n          <div className=\"mt-2\">\n            <DeleteButton\n              petId={pet._id}\n              petName={pet.name}\n              successCallback={() => navigate(\"/pets\")}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-5\">\n        <p>Pet Type: {pet.type}</p>\n        <p>Description: {pet.description}</p>\n        <div className=\"d-flex\">\n          <p>Skills: </p>\n          <div className=\"ml-5\">\n            <ul className=\"list-unstyled\">\n              <li>{pet.skill_1}</li>\n              <li>{pet.skill_2}</li>\n              <li>{pet.skill_3}</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ViewPet;\n","import React, { useState, useEffect } from \"react\";\nimport PetForm from \"../components/PetForm\";\nimport axios from \"axios\";\nimport { navigate, Link } from \"@reach/router\";\n\nconst UpdatePet = (props) => {\n  const { id } = props;\n  const [errors, setErrors] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [pet, setPet] = useState({});\n  const [actionType] = useState(\"Edit\");\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:8000/pets/${id}`)\n      .then((res) => {\n        setPet(res.data);\n        setLoaded(true);\n      })\n  }, [id]);\n\n  const updatePet = (pet) => {\n    axios\n      .put(`http://localhost:8000/pets/${id}`, pet)\n      .then((res) => {\n        navigate(\"/pets\");\n      })\n      .catch((error) => {\n        const errorResponse = error.response.data.errors;\n\n        const errorArr = [];\n        for (const key of Object.keys(errorResponse)) {\n          // Loop through all errors and get the messages\n          errorArr.push(errorResponse[key].message);\n        }\n        setErrors(errorArr);\n      });\n  };\n\n  return (\n    <div className=\"container text-center\">\n      <div className=\"container text-left\">\n        <Link to=\"/pets\">back to home</Link>\n      </div>\n      <h1>Pet Shelter</h1>\n      <h5>Know a pet needing a home?</h5>\n      {errors.map((error, index) => (\n        <p className=\"text-danger\" key={index}>\n          {error}\n        </p>\n      ))}\n      {loaded && (\n        <PetForm\n          onSubmitProp={updatePet}\n          initialName={pet.name}\n          initialType={pet.type}\n          initialDescription={pet.description}\n          initialSkill_1={pet.skill_1}\n          initialSkill_2={pet.skill_2}\n          initialSkill_3={pet.skill_3}\n          actionType={actionType}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default UpdatePet;\n","import { Router, Redirect } from \"@reach/router\";\nimport Dashboard from \"./views/Dashboard\";\nimport NewPet from \"./views/NewPet\";\nimport ViewPet from \"./views/ViewPet\";\nimport UpdatePet from \"./views/UpdatePet\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Dashboard path=\"/pets\" />\n        <NewPet path=\"/pets/new\" />\n        <ViewPet path=\"/pets/:id\" />\n        <UpdatePet path=\"/pets/:id/edit\" />\n        <Redirect from=\"/\" to=\"/pets\" noThrow=\"true\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}